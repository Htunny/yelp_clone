facebook_app_secret
continue
@user.persisted?
continue
@user.errors
@user
exit
user.email
user.password
user.email
auth.info.email
user.errors
user = where(provider: auth.provider, uid: auth.uid).first_or_create { |user| user.email = auth.info.email && user.password = "12345678"}
user = where(provider: auth.provider, uid: auth.uid).first_or_create { |user| user.email = auth.info.email; user.password = "12345678"}
user = where(provider: auth.provider, uid: auth.uid).first_or_create { |user| user.email = auth.info.email }
user = where(provider: auth.provider, uid: auth.uid).first_or_create { |user| user.email = auth.info.email; user.password = Devise.friendly_token[0, 20]}
        end
          user.password = Devise.friendly_token[0, 20]
          user.email = auth.info.email
       user = where(provider: auth.provider, uid: auth.uid).first_or_create do |user|
          user.password = Devise.friendly_token[0, 20]
          user.email = auth.info.email
user = here(provider: auth.provider, uid: auth.uid).first_or_create do |user|
        end
          # user.image = auth.info.image # assuming the user model has an image
          # user.name = auth.info.name   # assuming the user model has a name
          user.password = Devise.friendly_token[0, 20]
          user.email = auth.info.email
user =   where(provider: auth.provider, uid: auth.uid).first_or_create do |user|
user.errors
user = where(provider: auth.provider, uid: auth.uid).first_or_create
where(provider: auth.provider, uid: auth.uid).first_or_create
user = _
where(provider: auth.provider, uid: auth.uid).first_or_create
user=_
where(provider: auth.provider, uid: auth.uid).first_or_create
where(provider: auth.provider, uid: auth.uid).first
where(provider: auth.provider, uid: auth.uid)
auth
